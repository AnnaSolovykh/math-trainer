import React from 'react';
import { Card, CardContent } from '@/components/ui/card';

interface ProgressCardProps {
  current: number;
  total: number;
  percentage: number;
  modeStyle: {
    background: string;
    progressColor: string;
  };
  compact?: boolean; 
}

export const ProgressCard: React.FC<ProgressCardProps> = ({ 
  current, 
  total, 
  percentage, 
  modeStyle,
  compact = false 
}) => {
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
  const getMotivationalMessage = () => {
    if (percentage === 0) {
      return { text: "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ!", color: "text-purple-600" };
    }
    if (percentage > 0 && percentage < 25) {
      return { text: "üí™ –û—Ç–ª–∏—á–Ω–æ–µ –Ω–∞—á–∞–ª–æ!", color: "text-blue-600" };
    }
    if (percentage >= 25 && percentage < 50) {
      return { text: "üåü –ß–µ—Ç–≤–µ—Ä—Ç—å –ø—É—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω–∞!", color: "text-green-600" };
    }
    if (percentage >= 50 && percentage < 75) {
      return { text: "üî• –ü–æ–ª–æ–≤–∏–Ω–∞ –ø–æ–∑–∞–¥–∏! –¢—ã –º–æ–ª–æ–¥–µ—Ü!", color: "text-orange-600" };
    }
    if (percentage >= 75 && percentage < 100) {
      return { text: "üèÜ –ü–æ—á—Ç–∏ —Ñ–∏–Ω–∏—à! –û—Å—Ç–∞–ª–æ—Å—å –Ω–µ–º–Ω–æ–≥–æ!", color: "text-red-600" };
    }
    if (percentage === 100) {
      return { text: "üéâ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ!", color: "text-purple-600", animated: true };
    }
    return { text: "üí° –ü–æ–¥—É–º–∞–π —Ö–æ—Ä–æ—à–µ–Ω—å–∫–æ –∏ –≤–≤–µ–¥–∏ –æ—Ç–≤–µ—Ç!", color: "text-white" };
  };

  const motivationalMessage = getMotivationalMessage();

  const compactProgressBar = (
    <div className="flex items-center gap-3">
      {/* –ú–∏–Ω–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä */}
      <div className="flex-1 bg-purple-900/50 rounded-full h-2 overflow-hidden">
        <div 
          className="h-full rounded-full transition-all duration-500 ease-out relative overflow-hidden"
          style={{ 
            width: `${percentage}%`,
            background: 'linear-gradient(to right, #fbbf24, #f59e0b, #10b981)' // –†–∞–¥—É–∂–Ω—ã–π –¥–ª—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ–≥–æ
          }}
        >
          <div className="absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent animate-pulse"></div>
        </div>
      </div>
      
      {/* –ü—Ä–æ—Ü–µ–Ω—Ç */}
      <span className="text-xs font-bold text-yellow-300 min-w-[2rem]">
        {percentage}%
      </span>
    </div>
  );

  // –û–±—ã—á–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
  const regularProgressBar = (
    <>
      <div className="flex items-center justify-between mb-2">
        <span className="text-xs sm:text-sm font-bold text-slate-700">
          –ü—Ä–æ–≥—Ä–µ—Å—Å: {current} –∏–∑ {total}
        </span>
        <span className="text-xs sm:text-sm font-bold text-slate-700">
          {percentage}%
        </span>
      </div>
      
      <div className="w-full bg-gray-200 rounded-full h-3 sm:h-4 overflow-hidden shadow-inner">
        <div 
          className="h-full rounded-full transition-all duration-500 ease-out relative overflow-hidden"
          style={{ 
            width: `${percentage}%`,
            background: modeStyle.background
          }}
        >
          <div className="absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent animate-pulse"></div>
        </div>
      </div>
    </>
  );

  // –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ä–µ–∂–∏–º –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –ø–æ–¥—Å–∫–∞–∑–∫–µ
  if (compact) {
    return (
      <div className="space-y-2">
        {compactProgressBar}
        <div className="text-center">
          <span 
            className={`text-xs sm:text-sm font-bold text-white ${motivationalMessage.animated ? 'animate-bounce' : ''}`}
          >
            {motivationalMessage.text}
          </span>
        </div>
      </div>
    );
  }

  // –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
  return (
    <Card className="w-full max-w-sm sm:max-w-md lg:max-w-lg bg-white/95 backdrop-blur-sm border-2 border-purple-200 shadow-xl mb-3">
      <CardContent className="p-3 sm:p-4">
        {regularProgressBar}
        
        <div className="mt-2 text-center">
          <span 
            className={`text-xs sm:text-sm font-medium ${motivationalMessage.color} ${motivationalMessage.animated ? 'animate-bounce' : ''}`}
          >
            {motivationalMessage.text}
          </span>
        </div>
      </CardContent>
    </Card>
  );
};